{
  "openapi": "3.0.2",
  "info": {
    "title": "Capability Statement describing HPI FHIR APIs",
    "description": "This is the computable resource that describes the RESTful endpoint",
    "license": {
      "name": "Creative Commons Zero v1.0 Universal",
      "url": "http://spdx.org/licenses/CC0-1.0.html"
    },
    "version": "0.10.0",
    "contact": {
      "name": "Ministry of Health",
      "email": "integration@health.govt.nz"
    }
  },
  "servers": [
    {
      "url": "https://api.hip.digital.health.nz/fhir/hpi/v1/",
      "description": "The HPI endpoint"
    }
  ],
  "externalDocs": {
    "url": "http://hl7.org.nz/fhir/ig/hpi/CapabilityStatement/HpiCapabilityStatement",
    "description": "FHIR CapabilityStatement"
  },
  "paths": {
    "/metadata": {
      "summary": "Access to the Server's Capability Statement",
      "description": "All FHIR Servers return a CapabilityStatement that describes what services they perform",
      "get": {
        "summary": "Return the server's capability statement",
        "operationId": "metadata",
        "responses": {
          "200": {
            "description": "the capbility statement",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/CapabilityStatement"
                }
              }
            }
          },
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          }
        ]
      }
    },
    "/Practitioner": {
      "summary": "manage the collection of resources of type Practitioner",
      "description": "Access to services to manage the collection of all resources of type Practitioner",
      "get": {
        "summary": "Search all resources of type Practitioner based on a set of criteria",
        "operationId": "searchPractitioner",
        "responses": {
          "200": {
            "description": "the resource being returned",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Practitioner"
                }
              }
            }
          },
          "default": {
            "description": "Error, with details",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationOutcome"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/pretty"
          },
          {
            "$ref": "#/components/parameters/summary"
          },
          {
            "$ref": "#/components/parameters/elements"
          },
          {
            "name": "identifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Not case sensitive",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "given",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "birthdate",
            "in": "query",
            "description": "Supports a search on practitioner birthdate",
            "schema": {
              "type": "string",
              "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "base64Binary": {
        "type": "string",
        "description": "A stream of bytes"
      },
      "boolean": {
        "pattern": "^true|false$",
        "type": "boolean",
        "description": "Value of \"true\" or \"false\""
      },
      "canonical": {
        "pattern": "^\\S*$",
        "type": "string",
        "description": "A URI that is a reference to a canonical URL on a FHIR resource"
      },
      "code": {
        "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
        "type": "string",
        "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
      },
      "date": {
        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
        "type": "string",
        "description": "A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates."
      },
      "dateTime": {
        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
        "type": "string",
        "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
      },
      "decimal": {
        "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
        "type": "number",
        "description": "A rational number with implicit precision"
      },
      "id": {
        "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
        "type": "string",
        "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
      },
      "instant": {
        "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
        "type": "string",
        "description": "An instant in time - known at least to the second"
      },
      "integer": {
        "pattern": "^-?([0]|([1-9][0-9]*))$",
        "type": "number",
        "description": "A whole number"
      },
      "markdown": {
        "pattern": "^[ \\r\\n\\t\\S]+$",
        "type": "string",
        "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
      },
      "oid": {
        "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
        "type": "string",
        "description": "An OID represented as a URI"
      },
      "positiveInt": {
        "pattern": "^[1-9][0-9]*$",
        "type": "number",
        "description": "An integer with a value that is positive (e.g. >0)"
      },
      "string": {
        "pattern": "^[ \\r\\n\\t\\S]+$",
        "type": "string",
        "description": "A sequence of Unicode characters"
      },
      "time": {
        "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
        "type": "string",
        "description": "A time during the day, with no date specified"
      },
      "unsignedInt": {
        "pattern": "^[0]|([1-9][0-9]*)$",
        "type": "number",
        "description": "An integer with a value that is not negative (e.g. >= 0)"
      },
      "uri": {
        "pattern": "^\\S*$",
        "type": "string",
        "description": "String of characters used to identify a name or a resource"
      },
      "url": {
        "pattern": "^\\S*$",
        "type": "string",
        "description": "A URI that is a literal reference"
      },
      "uuid": {
        "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
        "type": "string",
        "description": "A UUID, represented as a URI"
      },
      "xhtml": {
        "description": "xhtml - escaped html (see specfication)"
      },
      "Meta": {
        "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
        "properties": {
          "versionId": {
            "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
            "$ref": "#/components/schemas/id"
          },
          "profile": {
            "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
            "items": {
              "$ref": "#/components/schemas/canonical"
            },
            "type": "array"
          },
          "security": {
            "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
            "items": {
              "$ref": "#/components/schemas/Coding"
            },
            "type": "array"
          }
        }
      },
      "CodeableConcept": {
        "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "coding": {
            "description": "A reference to a code defined by a terminology system.",
            "items": {
              "$ref": "#/components/schemas/Coding"
            },
            "type": "array"
          },
          "text": {
            "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
            "$ref": "#/components/schemas/string"
          }
        }
      },
      "Coding": {
        "description": "A reference to a code defined by a terminology system.",
        "properties": {
          "system": {
            "description": "The identification of the code system that defines the meaning of the symbol in the code.",
            "$ref": "#/components/schemas/uri"
          },
          "version": {
            "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
            "$ref": "#/components/schemas/string"
          },
          "code": {
            "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
            "$ref": "#/components/schemas/code"
          },
          "display": {
            "description": "A representation of the meaning of the code in the system, following the rules of the system.",
            "$ref": "#/components/schemas/string"
          }
        }
      },
      "Extension": {
        "description": "Optional Extension Element - found in all resources.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "url": {
            "description": "Source of the definition for the extension code - a logical name or a URL.",
            "$ref": "#/components/schemas/uri"
          },
          "valueBoolean": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^true|false$",
            "type": "boolean"
          },
          "valueCanonical": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "valueCode": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[^\\s]+(\\s[^\\s]+)*$",
            "type": "string"
          },
          "valueDate": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
            "type": "string"
          },
          "valueDateTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
            "type": "string"
          },
          "valueDecimal": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
            "type": "number"
          },
          "valueId": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
            "type": "string"
          },
          "valueInstant": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
            "type": "string"
          },
          "valueInteger": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^-?([0]|([1-9][0-9]*))$",
            "type": "number"
          },
          "valueMarkdown": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "valueOid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
            "type": "string"
          },
          "valuePositiveInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[1-9][0-9]*$",
            "type": "number"
          },
          "valueString": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[ \\r\\n\\t\\S]+$",
            "type": "string"
          },
          "valueTime": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
            "type": "string"
          },
          "valueUnsignedInt": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^[0]|([1-9][0-9]*)$",
            "type": "number"
          },
          "valueUri": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "valueUrl": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^\\S*$",
            "type": "string"
          },
          "valueUuid": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "type": "string"
          },
          "valueCodeableConcept": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "valueCoding": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Coding"
          },
          "valuePeriod": {
            "description": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
            "$ref": "#/components/schemas/Period"
          }
        },
        "additionalProperties": false
      },
      "Identifier": {
        "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "use": {
            "description": "The purpose of this identifier.",
            "enum": [
              "usual",
              "official",
              "temp",
              "secondary",
              "old"
            ]
          },
          "type": {
            "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "system": {
            "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
            "$ref": "#/components/schemas/uri"
          },
          "value": {
            "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
            "$ref": "#/components/schemas/string"
          },
          "period": {
            "description": "Time period during which identifier is/was valid for use.",
            "$ref": "#/components/schemas/Period"
          },
          "assigner": {
            "description": "Organization that issued/manages the identifier.",
            "$ref": "#/components/schemas/Reference"
          }
        },
        "additionalProperties": false
      },
      "HumanName": {
        "description": "A human's name with the ability to identify parts and usage.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "use": {
            "description": "Identifies the purpose for this name.",
            "enum": [
              "usual",
              "official",
              "temp",
              "nickname",
              "anonymous",
              "old",
              "maiden"
            ]
          },
          "text": {
            "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts.",
            "$ref": "#/components/schemas/string"
          },
          "family": {
            "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father.",
            "$ref": "#/components/schemas/string"
          },
          "given": {
            "description": "Given name.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "prefix": {
            "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "suffix": {
            "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "period": {
            "description": "Indicates the period of time when this name was valid for the named person.",
            "$ref": "#/components/schemas/Period"
          }
        },
        "additionalProperties": false
      },
      "Period": {
        "description": "A time period defined by a start and end date and optionally time.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "start": {
            "description": "The start of the period. The boundary is inclusive.",
            "$ref": "#/components/schemas/dateTime"
          },
          "end": {
            "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.",
            "$ref": "#/components/schemas/dateTime"
          }
        },
        "additionalProperties": false
      },
      "Reference": {
        "description": "A reference from one resource to another.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "reference": {
            "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
            "$ref": "#/components/schemas/string"
          },
          "type": {
            "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
            "$ref": "#/components/schemas/uri"
          },
          "identifier": {
            "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
            "$ref": "#/components/schemas/Identifier"
          },
          "display": {
            "description": "Plain text narrative that identifies the resource in addition to the resource reference.",
            "$ref": "#/components/schemas/string"
          }
        },
        "additionalProperties": false
      },
      "CapabilityStatement": {
        "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
        "properties": {
          "resourceType": {
            "description": "This is a CapabilityStatement resource"
          },
          "id": {
            "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
            "$ref": "#/components/schemas/id"
          },
          "name": {
            "description": "A natural language name identifying the capability statement. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
            "$ref": "#/components/schemas/string"
          },
          "status": {
            "description": "The status of this capability statement. Enables tracking the life-cycle of the content.",
            "enum": [
              "draft",
              "active",
              "retired",
              "unknown"
            ]
          },
          "date": {
            "description": "The date  (and optionally time) when the capability statement was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the capability statement changes.",
            "$ref": "#/components/schemas/dateTime"
          },
          "publisher": {
            "description": "The name of the organization or individual that published the capability statement.",
            "$ref": "#/components/schemas/string"
          },
          "kind": {
            "description": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase).",
            "enum": [
              "instance",
              "capability",
              "requirements"
            ]
          },
          "software": {
            "description": "Software that is covered by this capability statement.  It is used when the capability statement describes the capabilities of a particular software version, independent of an installation.",
            "$ref": "#/components/schemas/CapabilityStatement_Software"
          },
          "implementation": {
            "description": "Identifies a specific implementation instance that is described by the capability statement - i.e. a particular installation, rather than the capabilities of a software program.",
            "$ref": "#/components/schemas/CapabilityStatement_Implementation"
          },
          "fhirVersion": {
            "description": "The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value.",
            "enum": [
              "4.0.1"
            ]
          },
          "format": {
            "description": "A list of the formats supported by this implementation using their content types.",
            "items": {
              "$ref": "#/components/schemas/code"
            },
            "type": "array"
          },
          "implementationGuide": {
            "description": "A list of implementation guides that the server does (or should) support in their entirety.",
            "items": {
              "$ref": "#/components/schemas/canonical"
            },
            "type": "array"
          },
          "rest": {
            "description": "A definition of the restful capabilities of the solution, if any.",
            "items": {
              "$ref": "#/components/schemas/CapabilityStatement_Rest"
            },
            "type": "array"
          }
        }
      },
      "CapabilityStatement_Software": {
        "description": "A collection of error, warning, or information messages that result from a system action.",
        "properties": {
          "resourceType": {
            "description": "This is a OperationOutcome resource"
          },
          "issue": {
            "description": "An error, warning, or information message that results from a system action.",
            "items": {
              "$ref": "#/components/schemas/OperationOutcome_Issue"
            },
            "type": "array"
          }
        },
        "additionalProperties": false,
        "required": [
          "issue",
          "resourceType"
        ]
      },
      "CapabilityStatement_Implementation": {
        "description": "A collection of error, warning, or information messages that result from a system action.",
        "properties": {
          "issue": {
            "description": "An error, warning, or information message that results from a system action.",
            "items": {
              "$ref": "#/components/schemas/OperationOutcome_Issue"
            },
            "type": "array"
          }
        },
        "additionalProperties": false,
        "required": [
          "issue",
          "resourceType"
        ]
      },
      "CapabilityStatement_Rest": {
        "description": "A collection of error, warning, or information messages that result from a system action.",
        "properties": {
          "mode": {
            "description": "Identifies whether this portion of the statement is describing the ability to initiate or receive restful operations.",
            "enum": [
              "client",
              "server"
            ]
          },
          "resource": {
            "description": "A specification of the restful capabilities of the solution for a specific resource type.",
            "items": {
              "$ref": "#/components/schemas/CapabilityStatement_Resource"
            },
            "type": "array"
          }
        }
      },
      "CapabilityStatement_Resource": {
        "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
        "properties": {
          "type": {
            "description": "A type of resource exposed via the restful interface.",
            "$ref": "#/components/schemas/code"
          },
          "profile": {
            "description": "A specification of the profile that describes the solution's overall support for the resource, including any constraints on cardinality, bindings, lengths or other limitations. See further discussion in [Using Profiles](profiling.html#profile-uses).",
            "$ref": "#/components/schemas/canonical"
          },
          "interaction": {
            "description": "Identifies a restful operation supported by the solution.",
            "items": {
              "$ref": "#/components/schemas/CapabilityStatement_Interaction"
            },
            "type": "array"
          },
          "searchInclude": {
            "description": "A list of _include values supported by the server.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "searchRevInclude": {
            "description": "A list of _revinclude (reverse include) values supported by the server.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "searchParam": {
            "description": "Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
            "items": {
              "$ref": "#/components/schemas/CapabilityStatement_SearchParam"
            },
            "type": "array"
          }
        }
      },
      "CapabilityStatement_Interaction": {
        "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
        "properties": {
          "code": {
            "description": "Coded identifier of the operation, supported by the system resource.",
            "enum": [
              "read",
              "vread",
              "update",
              "patch",
              "delete",
              "history-instance",
              "history-type",
              "create",
              "search-type"
            ]
          },
          "searchInclude": {
            "description": "A list of _include values supported by the server.",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "searchParam": {
            "description": "Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
            "items": {
              "$ref": "#/components/schemas/CapabilityStatement_SearchParam"
            },
            "type": "array"
          }
        }
      },
      "CapabilityStatement_SearchParam": {
        "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
        "properties": {
          "name": {
            "description": "The name of the search parameter used in the interface.",
            "$ref": "#/components/schemas/string"
          },
          "type": {
            "description": "The type of value a search parameter refers to, and how the content is interpreted.",
            "enum": [
              "number",
              "date",
              "string",
              "token",
              "reference",
              "composite",
              "quantity",
              "uri",
              "special"
            ]
          },
          "documentation": {
            "description": "This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms.",
            "$ref": "#/components/schemas/markdown"
          }
        }
      },
      "OperationOutcome": {
        "description": "A collection of error, warning, or information messages that result from a system action.",
        "properties": {
          "issue": {
            "description": "An error, warning, or information message that results from a system action.",
            "items": {
              "$ref": "#/components/schemas/OperationOutcome_Issue"
            },
            "type": "array"
          }
        }
      },
      "OperationOutcome_Issue": {
        "description": "A collection of error, warning, or information messages that result from a system action.",
        "properties": {
          "severity": {
            "description": "Indicates whether the issue indicates a variation from successful processing.",
            "enum": [
              "fatal",
              "error",
              "warning",
              "information"
            ]
          },
          "code": {
            "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.",
            "enum": [
              "invalid",
              "structure",
              "required",
              "value",
              "invariant",
              "security",
              "login",
              "unknown",
              "expired",
              "forbidden",
              "suppressed",
              "processing",
              "not-supported",
              "duplicate",
              "multiple-matches",
              "not-found",
              "deleted",
              "too-long",
              "code-invalid",
              "extension",
              "too-costly",
              "business-rule",
              "conflict",
              "transient",
              "lock-error",
              "no-store",
              "exception",
              "timeout",
              "incomplete",
              "throttled",
              "informational"
            ]
          },
          "diagnostics": {
            "description": "Additional diagnostic information about the issue.",
            "$ref": "#/components/schemas/string"
          }
        }
      },
      "Practitioner": {
        "description": "A person who is directly or indirectly involved in the provisioning of healthcare.",
        "properties": {
          "resourceType": {
            "description": "This is a Practitioner resource"
          },
          "id": {
            "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
            "$ref": "#/components/schemas/id"
          },
          "meta": {
            "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
            "$ref": "#/components/schemas/Meta"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Practitioner_Extensions"
            },
            "type": "object"
          },
          "identifier": {
            "description": "An identifier that applies to this person in this role.",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "type": "array"
          },
          "name": {
            "description": "The name(s) associated with the practitioner.",
            "items": {
              "$ref": "#/components/schemas/HumanName"
            },
            "type": "array"
          },
          "qualification": {
            "description": "The official certifications, training, and licenses that authorize or otherwise pertain to the provision of care by the practitioner.  For example, a medical license issued by a medical board authorizing the practitioner to practice medicine within a certian locality.",
            "items": {
              "$ref": "#/components/schemas/Practitioner_Qualification"
            },
            "type": "array"
          },
          "communication": {
            "description": "A language the practitioner can use in patient communication.",
            "items": {
              "$ref": "#/components/schemas/CodeableConcept"
            },
            "type": "array"
          }
        }
      },
      "Practitioner_Qualification": {
        "description": "A person who is directly or indirectly involved in the provisioning of healthcare.",
        "properties": {
          "id": {
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
            "$ref": "#/components/schemas/string"
          },
          "extension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "modifierExtension": {
            "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
            "items": {
              "$ref": "#/components/schemas/Extension"
            },
            "type": "array"
          },
          "identifier": {
            "description": "An identifier that applies to this person's qualification in this role.",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "type": "array"
          },
          "code": {
            "description": "Coded representation of the qualification.",
            "$ref": "#/components/schemas/CodeableConcept"
          },
          "period": {
            "description": "Period during which the qualification is valid.",
            "$ref": "#/components/schemas/Period"
          },
          "issuer": {
            "description": "Organization that regulates and issues the qualification.",
            "$ref": "#/components/schemas/Reference"
          }
        },
        "additionalProperties": false,
        "required": [
          "code"
        ]
      },
      "Practitioner_Extensions": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/Educational-Qualification"
            },
            {
              "$ref": "#/components/schemas/DeathDate"
            }
          ]
        }
      },
      "DeathDate": {
        "properties": {
          "url": {
            "enum": [
              "http://hl7.org.nz/fhir/StructureDefinition/death-date"
            ]
          },
          "valueDate": {
            "$ref": "#/components/schemas/date"
          }
        }
      },
      "Educational-Qualification": {
        "type": "object",
        "properties": {
          "url": {
            "enum": [
              "http://hl7.org.nz/fhir/StructureDefinition/educational-qualification"
            ]
          },
          "extension": {
            "properties": {
              "fullname": {
                "properties": {
                  "url": {
                    "enum": [
                      "fullname"
                    ]
                  },
                  "valueString": {
                    "type": "string"
                  }
                }
              },
              "year": {
                "properties": {
                  "url": {
                    "enum": [
                      "year"
                    ]
                  },
                  "valueString": {
                    "type": "string"
                  }
                }
              },
               "institution": {
                "properties": {
                  "url": {
                    "enum": [
                      "institution"
                    ]
                  },
                  "valueString": {
                    "type": "string"
                  }
                }
              },
               "city": {
                "properties": {
                  "url": {
                    "enum": [
                      "city"
                    ]
                  },
                  "valueString": {
                    "type": "string"
                  }
                }
              },
               "country": {
                "properties": {
                  "url": {
                    "enum": [
                      "country"
                    ]
                  },
                  "valueString": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "rid": {
        "name": "rid",
        "in": "path",
        "description": "id of the resource (=Resource.id)",
        "required": true,
        "allowEmptyValue": false,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "hid": {
        "name": "hid",
        "in": "path",
        "description": "id of the history entry (=Resource.meta.versionId)",
        "required": true,
        "allowEmptyValue": false,
        "style": "simple",
        "schema": {
          "type": "string"
        }
      },
      "summary": {
        "name": "_summary",
        "in": "query",
        "description": "Requests the server to return a designated subset of the resource",
        "allowEmptyValue": true,
        "style": "form",
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "text",
            "data",
            "count",
            "false"
          ]
        }
      },
      "format": {
        "name": "_format",
        "in": "query",
        "description": "Specify alternative response formats by their MIME-types (when a client is unable acccess accept: header)",
        "allowEmptyValue": true,
        "style": "form",
        "schema": {
          "type": "string",
          "format": "mime-type"
        }
      },
      "pretty": {
        "name": "_pretty",
        "in": "query",
        "description": "Ask for a pretty printed response for human convenience",
        "allowEmptyValue": true,
        "style": "form",
        "schema": {
          "type": "boolean"
        }
      },
      "elements": {
        "name": "_elements",
        "in": "query",
        "description": "Requests the server to return a collection of elements from the resource",
        "allowEmptyValue": true,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "format": "string",
          "items": {
            "format": "string"
          }
        }
      },
      "count": {
        "name": "_count",
        "in": "query",
        "description": "The maximum number of search results on a page. The server is not bound to return the number requested, but cannot return more",
        "schema": {
          "type": "number"
        }
      }
    }
  }
}