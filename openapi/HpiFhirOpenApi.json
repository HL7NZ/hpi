{
	"openapi": "3.0.2",
	"info": {
		"title": "Capability Statement describing HPI FHIR APIs",
		"description": "This is the computable resource that describes the RESTful endpoint",
		"license": {
			"name": "Creative Commons Zero v1.0 Universal",
			"url": "http://spdx.org/licenses/CC0-1.0.html"
		},
		"version": "0.10.0",
		"contact": {
			"name": "Ministry of Health",
			"email": "integration@health.govt.nz"
		}
	},
	"servers": [
		{
			"url": "https://api.hip.digital.health.nz/fhir/hpi/v1/",
			"description": "The HPI endpoint"
		}
	],
	"externalDocs": {
		"url": "http://hl7.org.nz/fhir/ig/hpi/CapabilityStatement/HpiCapabilityStatement",
		"description": "FHIR CapabilityStatement"
	},
	"paths": {
		"/metadata": {
			"summary": "Access to the Server\u0027s Capability Statement",
			"description": "All FHIR Servers return a CapabilityStatement that describes what services they perform",
			"get": {
				"summary": "Return the server\u0027s capability statement",
				"operationId": "metadata",
				"responses": {
					"default": {
						"description": "Error, with details",
						"content": {
							"application/fhir+json": {
								"schema": {
									"$ref": "#/components/schemas/OperationOutcome"
								}
							}
						}
					},
					"200": {
						"description": "the capbility statement",
						"content": {
							"application/fhir+json": {
								"schema": {
									"$ref": "#/components/schemas/CapabilityStatement"
								}
							}
						}
					}
				},
				"parameters": [
					{
						"$ref": "#/components/parameters/format"
					},
					{
						"$ref": "#/components/parameters/pretty"
					},
					{
						"$ref": "#/components/parameters/summary"
					},
					{
						"$ref": "#/components/parameters/elements"
					}
				]
			}
		}
	},
	"components": {
		"schemas": {
			"base64Binary": {
				"type": "string",
				"description": "A stream of bytes"
			},
			"boolean": {
				"pattern": "^true|false$",
				"type": "boolean",
				"description": "Value of \"true\" or \"false\""
			},
			"canonical": {
				"pattern": "^\\S*$",
				"type": "string",
				"description": "A URI that is a reference to a canonical URL on a FHIR resource"
			},
			"code": {
				"pattern": "^[^\\s]+(\\s[^\\s]+)*$",
				"type": "string",
				"description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
			},
			"date": {
				"pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$",
				"type": "string",
				"description": "A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates."
			},
			"dateTime": {
				"pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
				"type": "string",
				"description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
			},
			"decimal": {
				"pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$",
				"type": "number",
				"description": "A rational number with implicit precision"
			},
			"id": {
				"pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
				"type": "string",
				"description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
			},
			"instant": {
				"pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$",
				"type": "string",
				"description": "An instant in time - known at least to the second"
			},
			"integer": {
				"pattern": "^-?([0]|([1-9][0-9]*))$",
				"type": "number",
				"description": "A whole number"
			},
			"markdown": {
				"pattern": "^[ \\r\\n\\t\\S]+$",
				"type": "string",
				"description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
			},
			"oid": {
				"pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$",
				"type": "string",
				"description": "An OID represented as a URI"
			},
			"positiveInt": {
				"pattern": "^[1-9][0-9]*$",
				"type": "number",
				"description": "An integer with a value that is positive (e.g. \u003e0)"
			},
			"string": {
				"pattern": "^[ \\r\\n\\t\\S]+$",
				"type": "string",
				"description": "A sequence of Unicode characters"
			},
			"time": {
				"pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$",
				"type": "string",
				"description": "A time during the day, with no date specified"
			},
			"unsignedInt": {
				"pattern": "^[0]|([1-9][0-9]*)$",
				"type": "number",
				"description": "An integer with a value that is not negative (e.g. \u003e\u003d 0)"
			},
			"uri": {
				"pattern": "^\\S*$",
				"type": "string",
				"description": "String of characters used to identify a name or a resource"
			},
			"url": {
				"pattern": "^\\S*$",
				"type": "string",
				"description": "A URI that is a literal reference"
			},
			"uuid": {
				"pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
				"type": "string",
				"description": "A UUID, represented as a URI"
			},
			"xhtml": {
				"description": "xhtml - escaped html (see specfication)"
			},
			"CapabilityStatement": {
				"description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
				"properties": {
					"resourceType": {
						"description": "This is a CapabilityStatement resource"
					},
					"id": {
						"description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
						"$ref": "#/components/schemas/id"
					},
					"name": {
						"description": "A natural language name identifying the capability statement. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
						"$ref": "#/components/schemas/string"
					},
					"status": {
						"description": "The status of this capability statement. Enables tracking the life-cycle of the content.",
						"enum": [
							"draft",
							"active",
							"retired",
							"unknown"
						]
					},
					"date": {
						"description": "The date  (and optionally time) when the capability statement was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the capability statement changes.",
						"$ref": "#/components/schemas/dateTime"
					},
					"publisher": {
						"description": "The name of the organization or individual that published the capability statement.",
						"$ref": "#/components/schemas/string"
					},
					"kind": {
						"description": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase).",
						"enum": [
							"instance",
							"capability",
							"requirements"
						]
					},
					"software": {
						"description": "Software that is covered by this capability statement.  It is used when the capability statement describes the capabilities of a particular software version, independent of an installation.",
						"$ref": "#/components/schemas/CapabilityStatement_Software"
					},
					"implementation": {
						"description": "Identifies a specific implementation instance that is described by the capability statement - i.e. a particular installation, rather than the capabilities of a software program.",
						"$ref": "#/components/schemas/CapabilityStatement_Implementation"
					},
					"fhirVersion": {
						"description": "The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value.",
						"enum": [
							"4.0.1"
						]
					},
					"format": {
						"description": "A list of the formats supported by this implementation using their content types.",
						"items": {
							"$ref": "#/components/schemas/code"
						},
						"type": "array"
					},
					"implementationGuide": {
						"description": "A list of implementation guides that the server does (or should) support in their entirety.",
						"items": {
							"$ref": "#/components/schemas/canonical"
						},
						"type": "array"
					},
					"rest": {
						"description": "A definition of the restful capabilities of the solution, if any.",
						"items": {
							"$ref": "#/components/schemas/CapabilityStatement_Rest"
						},
						"type": "array"
					}
				}
			},
			"CapabilityStatement_Software": {
				"description": "A collection of error, warning, or information messages that result from a system action.",
				"properties": {
					"resourceType": {
						"description": "This is a OperationOutcome resource"
					},
					"issue": {
						"description": "An error, warning, or information message that results from a system action.",
						"items": {
							"$ref": "#/components/schemas/OperationOutcome_Issue"
						},
						"type": "array"
					}
				},
				"additionalProperties": false,
				"required": [
					"issue",
					"resourceType"
				]
			},
			"CapabilityStatement_Implementation": {
				"description": "A collection of error, warning, or information messages that result from a system action.",
				"properties": {
					"issue": {
						"description": "An error, warning, or information message that results from a system action.",
						"items": {
							"$ref": "#/components/schemas/OperationOutcome_Issue"
						},
						"type": "array"
					}
				},
				"additionalProperties": false,
				"required": [
					"issue",
					"resourceType"
				]
			},
			"CapabilityStatement_Rest": {
				"description": "A collection of error, warning, or information messages that result from a system action.",
				"properties": {
					"mode": {
						"description": "Identifies whether this portion of the statement is describing the ability to initiate or receive restful operations.",
						"enum": [
							"client",
							"server"
						]
					},
					"resource": {
						"description": "A specification of the restful capabilities of the solution for a specific resource type.",
						"items": {
							"$ref": "#/components/schemas/CapabilityStatement_Resource"
						},
						"type": "array"
					}
				}
			},
			"CapabilityStatement_Resource": {
				"description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
				"properties": {
					"type": {
						"description": "A type of resource exposed via the restful interface.",
						"$ref": "#/components/schemas/code"
					},
					"profile": {
						"description": "A specification of the profile that describes the solution\u0027s overall support for the resource, including any constraints on cardinality, bindings, lengths or other limitations. See further discussion in [Using Profiles](profiling.html#profile-uses).",
						"$ref": "#/components/schemas/canonical"
					},
					"interaction": {
						"description": "Identifies a restful operation supported by the solution.",
						"items": {
							"$ref": "#/components/schemas/CapabilityStatement_Interaction"
						},
						"type": "array"
					},
					"searchInclude": {
						"description": "A list of _include values supported by the server.",
						"items": {
							"$ref": "#/components/schemas/string"
						},
						"type": "array"
					},
					"searchRevInclude": {
						"description": "A list of _revinclude (reverse include) values supported by the server.",
						"items": {
							"$ref": "#/components/schemas/string"
						},
						"type": "array"
					},
					"searchParam": {
						"description": "Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
						"items": {
							"$ref": "#/components/schemas/CapabilityStatement_SearchParam"
						},
						"type": "array"
					}
				}
			},
			"CapabilityStatement_Interaction": {
				"description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
				"properties": {
					"code": {
						"description": "Coded identifier of the operation, supported by the system resource.",
						"enum": [
							"read",
							"vread",
							"update",
							"patch",
							"delete",
							"history-instance",
							"history-type",
							"create",
							"search-type"
						]
					},
					"searchInclude": {
						"description": "A list of _include values supported by the server.",
						"items": {
							"$ref": "#/components/schemas/string"
						},
						"type": "array"
					},
					"searchParam": {
						"description": "Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
						"items": {
							"$ref": "#/components/schemas/CapabilityStatement_SearchParam"
						},
						"type": "array"
					}
				}
			},
			"CapabilityStatement_SearchParam": {
				"description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
				"properties": {
					"name": {
						"description": "The name of the search parameter used in the interface.",
						"$ref": "#/components/schemas/string"
					},
					"type": {
						"description": "The type of value a search parameter refers to, and how the content is interpreted.",
						"enum": [
							"number",
							"date",
							"string",
							"token",
							"reference",
							"composite",
							"quantity",
							"uri",
							"special"
						]
					},
					"documentation": {
						"description": "This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms.",
						"$ref": "#/components/schemas/markdown"
					}
				}
			},
			"OperationOutcome": {
				"description": "A collection of error, warning, or information messages that result from a system action.",
				"properties": {
					"issue": {
						"description": "An error, warning, or information message that results from a system action.",
						"items": {
							"$ref": "#/components/schemas/OperationOutcome_Issue"
						},
						"type": "array"
					}
				}
			},
			"OperationOutcome_Issue": {
				"description": "A collection of error, warning, or information messages that result from a system action.",
				"properties": {
					"severity": {
						"description": "Indicates whether the issue indicates a variation from successful processing.",
						"enum": [
							"fatal",
							"error",
							"warning",
							"information"
						]
					},
					"code": {
						"description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.",
						"enum": [
							"invalid",
							"structure",
							"required",
							"value",
							"invariant",
							"security",
							"login",
							"unknown",
							"expired",
							"forbidden",
							"suppressed",
							"processing",
							"not-supported",
							"duplicate",
							"multiple-matches",
							"not-found",
							"deleted",
							"too-long",
							"code-invalid",
							"extension",
							"too-costly",
							"business-rule",
							"conflict",
							"transient",
							"lock-error",
							"no-store",
							"exception",
							"timeout",
							"incomplete",
							"throttled",
							"informational"
						]
					},
					"diagnostics": {
						"description": "Additional diagnostic information about the issue.",
						"$ref": "#/components/schemas/string"
					}
				}
			}
		},
		"parameters": {
			"rid": {
				"name": "rid",
				"in": "path",
				"description": "id of the resource (\u003dResource.id)",
				"required": true,
				"allowEmptyValue": false,
				"style": "simple",
				"schema": {
					"type": "string"
				}
			},
			"hid": {
				"name": "hid",
				"in": "path",
				"description": "id of the history entry (\u003dResource.meta.versionId)",
				"required": true,
				"allowEmptyValue": false,
				"style": "simple",
				"schema": {
					"type": "string"
				}
			},
			"summary": {
				"name": "_summary",
				"in": "query",
				"description": "Requests the server to return a designated subset of the resource",
				"allowEmptyValue": true,
				"style": "form",
				"schema": {
					"type": "string",
					"enum": [
						"true",
						"text",
						"data",
						"count",
						"false"
					]
				}
			},
			"format": {
				"name": "_format",
				"in": "query",
				"description": "Specify alternative response formats by their MIME-types (when a client is unable acccess accept: header)",
				"allowEmptyValue": true,
				"style": "form",
				"schema": {
					"type": "string",
					"format": "mime-type"
				}
			},
			"pretty": {
				"name": "_pretty",
				"in": "query",
				"description": "Ask for a pretty printed response for human convenience",
				"allowEmptyValue": true,
				"style": "form",
				"schema": {
					"type": "boolean"
				}
			},
			"elements": {
				"name": "_elements",
				"in": "query",
				"description": "Requests the server to return a collection of elements from the resource",
				"allowEmptyValue": true,
				"style": "form",
				"explode": false,
				"schema": {
					"type": "array",
					"format": "string",
					"items": {
						"format": "string"
					}
				}
			},
			"count": {
				"name": "_count",
				"in": "query",
				"description": "The maximum number of search results on a page. The server is not bound to return the number requested, but cannot return more",
				"schema": {
					"type": "number"
				}
			}
		}
	}
}
